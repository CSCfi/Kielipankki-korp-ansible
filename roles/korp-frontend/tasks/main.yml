---
# Setup korp frontend

- name: Add yarn repository
  yum_repository:
    name: yarn
    description: Yarn YUM repo
    baseurl: https://dl.yarnpkg.com/rpm/
    gpgcheck: true
    gpgkey: https://dl.yarnpkg.com/rpm/pubkey.gpg

- name: Add nodejs repository
  shell:
    cmd: curl -sL https://rpm.nodesource.com/setup_12.x | bash -
    creates: /etc/yum.repos.d/nodesource-el7.repo

- name: install CentOS IUS release package
  yum:
    name: "https://repo.ius.io/ius-release-el{{ ansible_distribution_major_version }}.rpm"
    state: present
  when: ansible_distribution == 'CentOS'

- name: Install basics
  yum:
    name:
      - nodejs
      - yarn
      - git224
      - gcc-c++
      - centos-release-scl
      - devtoolset-7
    state: present

- name: Ensure directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: root
  loop:
    - "{{ korp_git_root }}"
    - "{{ korp_frontend_www_home }}"

- name: Clone frontend
  git:
    repo: "{{ korp_frontend_repo  }}"
    version: "{{ korp_frontend_version }}"
    dest:  "{{ korp_frontend_home }}"
    force: true
  register: frontend_clone

- name: Set compile_frontend
  set_fact:
    compile_frontend: "{{ frontend_clone.after != frontend_clone.before }}"

- name: checkout worktrees
  shell:
    cmd: "git worktree add -f {{ item }}"
    chdir: "{{ korp_frontend_home }}"
    creates: "{{ item.split(' ')[0] }}/.git"
  loop:
     - "{{ korp_frontend_config_home }} config/{{ korp_frontend_version }}"
     - "{{ korp_frontend_plugin_home }} plugins/{{ korp_frontend_version }}"
     - "{{ korp_frontend_news_home }} news/{{ korp_frontend_version }}"

- name: update worktrees
  shell:
    cmd: "git pull"
    chdir: "{{ item }}"
  register: worktree
  loop:
     - "{{ korp_frontend_config_home }}"
     - "{{ korp_frontend_plugin_home }}"
     - "{{ korp_frontend_news_home }}"

- name: Skip this if all up to date
  set_fact:
    compile_frontend: true
  when: item.stdout != "Already up to date."
  loop: "{{ worktree.results }}"

- name: Install run_config
  template:
    src: run_config.json.j2
    dest: "{{ korp_frontend_home }}/run_config.json"

- name: Install frontend config
  template:
    src: korp_frontend_config.js.j2
    dest: "{{ korp_frontend_config_home }}/app/config.js"

- name: Fetch and compile dependencies
  shell:
    cmd: scl enable devtoolset-7 yarn
    chdir: "{{ korp_frontend_home }}"
  when: compile_frontend  == true
  
- name: Build frontend
  shell:
    cmd: yarn build
    chdir: "{{ korp_frontend_home }}"
  when: compile_frontend == true

- name: Create news directory
  file:
    dest:  "{{ korp_frontend_home }}/dist/news"
    state: directory

- name: Compile News
  shell:
    cmd: "./compile.bash"
    chdir: "{{ korp_frontend_news_home }}"
  when: compile_frontend == true
 
- name: Link news
  file:
    src: "{{ korp_frontend_news_home }}/json"
    dest:  "{{ korp_frontend_home }}/dist/news/json"
    state: link

- name: Install frontend
  shell:
    cmd: rsync -av --delete  "{{ korp_frontend_home }}/dist/" "{{ korp_frontend_www_home }}"
  when: compile_frontend == true

