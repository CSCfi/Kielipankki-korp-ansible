---
# Setup korp frontend

- name: Add yarn repository
  ansible.builtin.yum_repository:
    name: yarn
    description: Yarn YUM repo
    baseurl: https://dl.yarnpkg.com/rpm/
    gpgcheck: true
    gpgkey: https://dl.yarnpkg.com/rpm/pubkey.gpg

- name: Add nodejs repository
  ansible.builtin.shell:
    cmd: curl -sL https://rpm.nodesource.com/setup_12.x | bash -
    creates: /etc/yum.repos.d/nodesource-el9.repo

- name: Install basics
  ansible.builtin.dnf:
    name:
      - nodejs
      - yarn
      - git
      - gcc-c++
    state: present

- name: Install yarn
  ansible.builtin.command:
    cmd: npm install yarn

- name: Ensure directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: root
  loop:
    - "{{ korp_git_root }}"
    - "{{ korp_frontend_www_home }}"

- name: Clone frontend
  ansible.builtin.git:
    repo: "{{ korp_frontend_repo  }}"
    version: "{{ korp_frontend_version }}"
    dest: "{{ korp_frontend_home }}"
    force: true
    umask: "0022"
  register: frontend_clone

- name: Set compile_frontend
  # Request recompilation (compile_frontend = true) if an actual change has
  # happened, not if a local change has been overwritten, but nothing else
  # changed.
  ansible.builtin.set_fact:
    compile_frontend: "{{ ( frontend_clone.after != frontend_clone.before ) or ( force_compile | default(false) ) }}"

- name: Checkout worktrees
  ansible.builtin.shell:
    cmd: "umask 0022 && git worktree add -f {{ item }}"
    chdir: "{{ korp_frontend_home }}"
    creates: "{{ item.split(' ')[0] }}/.git"
  loop:
    - "{{ korp_frontend_config_home }} {{ korp_frontend_config_version }}"
    - "{{ korp_frontend_plugin_home }} {{ korp_frontend_plugin_version }}"
    - "{{ korp_frontend_news_home }} {{ korp_frontend_news_version }}"

- name: Remove local worktree changes
  ansible.builtin.shell:
    cmd: "git reset --hard"
    chdir: "{{ item }}"
  loop:
    - "{{ korp_frontend_config_home }}"
    - "{{ korp_frontend_plugin_home }}"
    - "{{ korp_frontend_news_home }}"

- name: Update worktrees and check for recompilation need
  ansible.builtin.shell:
    cmd: "git pull"
    chdir: "{{ item }}"
  register: worktree_pull
  loop:
    - "{{ korp_frontend_config_home }}"
    - "{{ korp_frontend_plugin_home }}"
    - "{{ korp_frontend_news_home }}"

- name: Switch to correct branch for worktrees in case they were locally changed
  ansible.builtin.shell:
    cmd: "git checkout {{ item.branch }}"
    chdir: "{{ item.worktree_dir }}"
  loop:
    - {
      worktree_dir: "{{ korp_frontend_config_home }}",
      branch: "{{ korp_frontend_config_version }}"
    }
    - {
      worktree_dir: "{{  korp_frontend_plugin_home }}",
      branch: "{{ korp_frontend_plugin_version }}"
    }
    - {
      worktree_dir: "{{ korp_frontend_news_home }}",
      branch: "{{ korp_frontend_news_version }}"
    }

- name: Make our own local config edits
  ansible.builtin.replace:
    path: "{{ korp_frontend_config_home }}/app/config.js"
    regexp: "/korp/api8"
    replace: "/{{ korp_path }}/api8"
  when: korp_path != "korp"

- name: Skip this if all up to date
  ansible.builtin.set_fact:
    compile_frontend: true
  when: (item.stdout != "Already up to date.") or ( force_compile | default(false))
  loop: "{{ worktree_pull.results }}"

- name: Install run_config
  ansible.builtin.template:
    src: run_config.json.j2
    dest: "{{ korp_frontend_home }}/run_config.json"
    mode: "0644"

- name: Install dependencies for frontend
  ansible.builtin.command:
    cmd: "yarn install"
    chdir: "{{ korp_frontend_home }}"
  when: compile_frontend == true

- name: Build frontend
  ansible.builtin.shell:
    cmd: "umask 0022 && yarn build"
    chdir: "{{ korp_frontend_home }}"
  when: compile_frontend == true

- name: Create news directories
  ansible.builtin.file:
    dest: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ korp_frontend_news_home }}/json"
    - "{{ korp_frontend_home }}/dist/news"

- name: Compile News
  ansible.builtin.shell:
    cmd: "umask 0022 && ./compile.bash"
    chdir: "{{ korp_frontend_news_home }}"
  when: compile_frontend == true

- name: Link news
  file:
    src: "{{ korp_frontend_news_home }}/json"
    dest: "{{ korp_frontend_home }}/dist/news/json"
    state: link

- name: Install frontend
  shell:
    cmd: rsync -av --delete  "{{ korp_frontend_home }}/dist/" "{{ korp_frontend_www_home }}"
  when: compile_frontend == true

- name: Hardcode korp_download
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
    force: true
  with_items:
    - {src: "{{ korp_static_frontend_cgi_dir }}", dest: "{{ korp_frontend_www_home }}/cgi-bin"}

- name: Create media directory
  file:
    path: "{{ media_dir }}"
    owner: root
    mode: '0733'
    state: directory

- name: Symlink media directory to /var/www/html
  file:
    src: "{{ media_dir }}"
    dest: "/var/www/html/media"
    state: link
