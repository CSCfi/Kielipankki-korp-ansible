---
# Set firewall in CSC compatible way

- name: Install iptables
  ansible.builtin.dnf:
    name:
      - iptables-legacy

- name: test for PATA VM
  stat: path=/etc/csc/host.info
  register: pata_host

- name: Ensure /etc/iptables
  ansible.builtin.file:
    path: /etc/iptables
    state: directory
    owner: root
    group: root
    mode: "0755"
  
- name: Install rules and scripts
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
    dest: "/etc/systemd/system/{{ item }}"
    owner: root
    group: root
    mode: "0640"
  loop:
    - src: iptables.rules
      dest: /etc/iptables/
      mode: 0640
    - src: flush-iptables.sh
      dest: /etc/iptables
      mode: 0750
    - src: iptables.service
      dest: /etc/systemd/system/
      mode: 0640
  notify:
    - restart systemd
  
- name: copy IP4/6 firewall statup scripts (if not already present)
  template:
    src: firewall.j2
    dest: "/etc/rc.d/rc{{ item }}.firewall"
    mode: 0750
    force: false
  with_items:
    - ""
    - 6

- name: copy IP4/6 local settings
  template:
    src: firewall.local.j2
    dest: "/etc/rc.d/rc{{ item }}.firewall.local"
    mode: 0750
  with_items:
    - ""
    - 6

- name: update rc.local
  lineinfile:
    dest: /etc/rc.d/rc.local
    line: "sleep 1m ; /bin/sh /etc/rc.d/rc.firewall; /bin/sh /etc/rc.d/rc6.firewall"
    regexp: "^sleep 1m"
    owner: root
    state: present
    insertafter: EOF
    create: true
  when: pata_host.stat.exists == False

- name: execute firewall
  command: /etc/rc.d/{{ item }} restart
  with_items:
    - rc.firewall
    - rc6.firewall
